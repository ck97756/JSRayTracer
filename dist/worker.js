!function(e){var t={};function i(n){if(t[n])return t[n].exports;var s=t[n]={i:n,l:!1,exports:{}};return e[n].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)i.d(n,s,function(t){return e[t]}.bind(null,s));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t,i){"use strict";i.r(t);class n{constructor(){1===arguments.length&&arguments[0]instanceof n?(this.x=arguments[0].x,this.y=arguments[0].y,this.z=arguments[0].z):3===arguments.length?(this.x=arguments[0],this.y=arguments[1],this.z=arguments[2]):(this.x=0,this.y=0,this.z=0)}plus(e){return new n(this.x+e.x,this.y+e.y,this.z+e.z)}minus(e){return new n(this.x-e.x,this.y-e.y,this.z-e.z)}multiply(e){return new n(this.x*e,this.y*e,this.z*e)}scaleToLength(e){let t=e/this.length();return new n(this.x*t,this.y*t,this.z*t)}normalize(){return this.scaleToLength(1)}cross(e){return new n(this.y*e.z-this.z*e.y,this.z*e.x-this.x*e.z,this.x*e.y-this.y*e.x)}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}negative(){return new n(-this.x,-this.y,-this.z)}multiplyByVec3(e){return new n(this.x*e.x,this.y*e.y,this.z*e.z)}divide(e){return new n(this.x/e,this.y/e,this.z/e)}projectOnto(e){return e.multiply(this.dot(e.normalize()))}projectLength(e){return this.dot(e.normalize())}}class s{constructor(){1===arguments.length&&arguments[0]instanceof s?(this.x=arguments[0].x,this.y=arguments[0].y):2===arguments.length?(this.x=arguments[0],this.y=arguments[1]):(this.x=0,this.y=0)}divide(e){return new s(this.x/e,this.y/e)}divideByVec2(e){return new s(this.x/e.x,this.y/e.y)}multiplyByVec2(e){return new s(this.x*e.x,this.y*e.y)}floor(){return new s(Math.floor(this.x),Math.floor(this.y))}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}}class r{constructor(e,t,i,s,r){this.startPosition=e,this.direction=null===t?null:t.normalize(),this.iterationCounter=i,this.weight=s,this.absort=r?new n(r):new n(1,1,1),this.ior=1.000277}}class o{constructor(e,t){this.BRDF=e,this.baseColor=t.baseColor||new n(1,1,1),this.materialParam=t}}function l(e,t,i,n,s){let o=n.BRDF,l=e.absort.multiplyByVec3(n.baseColor);if(null===o.numberOfRay)return null;o.numberOfRay&&s>o.numberOfRay&&(s=o.numberOfRay);let a=new Array(s),h=o.totalEnergy(s);for(let u=0;u<s;u++){let s=o.generateDirection(i,e,n),c=o.BRDF(i,s),w=new r(t,s,e.iterationCounter+1,c/h,l);void 0!==n.materialParam.ior&&(w.ior=n.materialParam.ior),a[u]=w}return a}const a={generateDirection(e,t){e.dot(t.direction)>0&&(e=e.negative());let i=new n(2*Math.random()-1,2*Math.random()-1,2*Math.random()-1).normalize();for(;i.dot(e)<.1&&(i=i.negative()).dot(e)<.1;)i=new n(2*Math.random()-1,2*Math.random()-1,2*Math.random()-1).normalize();return i},totalEnergy:e=>e,BRDF:()=>1},h={generateDirection:(e,t)=>e.multiply(2).minus(t.direction),totalEnergy:()=>1,BRDF:()=>1,numberOfRay:1};class u{constructor(){if(arguments.length>=2){if(!(arguments[0]instanceof n))throw"The first argument of constructor of Sphere must be type of Vec3";if(this.position=new n(arguments[0]),!("number"==typeof arguments[1]&&arguments[1]>=0))throw"The second argument of constructor of Sphere must be a nonnegative number";if(this.radius=arguments[1],arguments.length>2){if(!(arguments[2]instanceof o))throw"The third argument of constructor of Sphere must be type of Material";this.material=arguments[2]}else this.material=new o(a)}else this.position=new n,this.radius=1,this.material=new o(a)}*getCollision(e){let t=e.startPosition.minus(this.position),i=e.direction.dot(e.direction),n=2*e.direction.dot(t);let s,r=n*n-4*i*(t.dot(t)-this.radius*this.radius);if(r<0)yield Number.POSITIVE_INFINITY;else if(0===r){let e=-n/(2*i);e>0?(s=e)<1e-5?yield Number.POSITIVE_INFINITY:yield s:yield Number.POSITIVE_INFINITY}else{let e=Math.sqrt(r),t=-n-e;t>0?(s=t/(2*i))<1e-5?yield Number.POSITIVE_INFINITY:yield s:(t=-n+e)>0?(s=t/(2*i))<1e-5?yield Number.POSITIVE_INFINITY:yield s:yield Number.POSITIVE_INFINITY}let o=e.startPosition.plus(e.direction.multiply(s)),a=o.minus(this.position).normalize(),h=l(e,o,a,this.material,1);yield h,null===h&&(yield this.material.baseColor)}}class c{constructor(e,t,i,s){this.position=new n(e),this.firstVec=new n(t),this.secondVec=new n(i),this.normal=this.firstVec.cross(this.secondVec).normalize(),this.material=s}*getCollision(e){let t=e.direction.cross(this.secondVec),i=this.firstVec.dot(t);i>-1e-5&&i<1e-5&&(yield Number.POSITIVE_INFINITY);let n=1/i,s=e.startPosition.minus(this.position),r=n*s.dot(t);(r<0||r>1)&&(yield Number.POSITIVE_INFINITY);let o=s.cross(this.firstVec),a=n*e.direction.dot(o);(a<0||a>1)&&(yield Number.POSITIVE_INFINITY);let h=n*this.secondVec.dot(o);h>1e-5?yield h:yield Number.POSITIVE_INFINITY;let u=this.normal;u.dot(e.direction)>0&&(u=u.negative());let c=e.startPosition.plus(e.direction.multiply(h)),w=l(e,c,u,this.material,1);yield w,null===w&&(yield this.material.baseColor)}}let w=new class{constructor(){this.position=new n,this.lookAt=new n,this.top=new n(0,0,1),this.focus=0,this.size=new s,this.canvasSize=new s}setView(e,t,i){this.position=new n(e),this.lookAt=new n(t),this.top=new n(i);let s=this.lookAt.minus(this.position);this.leftVector=this.top.cross(s).normalize(),this.topVector=s.cross(this.leftVector).normalize()}},y=[],d=new o(h,{baseColor:new n(1,1,1)}),m=new u(new n(-2,-3,1),2,d);y.push(m),d=new o(a,{baseColor:new n(1,1,0)}),m=new u(new n(2,-3,-1),2,d),y.push(m),d=new o(a,{baseColor:new n(1,0,0)});let p=new c(new n(5,5,5),new n(0,0,-10),new n(0,-10,0),d);function f(e,t){let i=new n(0,0,0);for(let n of e){if(n.iterationCounter>8)continue;let e=Number.POSITIVE_INFINITY,s=null;for(let i of t){let t=i.getCollision(n),r=t.next().value;r<e&&(e=r,s=t)}if(e===Number.POSITIVE_INFINITY)continue;let r=s.next().value;i=null===r?i.plus(s.next().value.multiply(n.weight).multiplyByVec3(n.absort)):i.plus(f(r,t).multiply(n.weight).multiplyByVec3(n.absort))}return i}y.push(p),d=new o(a,{baseColor:new n(1,1,1)}),p=new c(new n(5,5,5),new n(-10,0,0),new n(0,-10,0),d),y.push(p),d=new o(a,{baseColor:new n(0,1,0)}),p=new c(new n(-5,5,5),new n(0,0,-10),new n(0,-10,0),d),y.push(p),d=new o(a,{baseColor:new n(1,1,1)}),p=new c(new n(5,-5,5),new n(-10,0,0),new n(0,0,-10),d),y.push(p),d=new o(a,{baseColor:new n(1,1,1)}),p=new c(new n(5,5,5),new n(-10,0,0),new n(0,0,-3),d),y.push(p),p=new c(new n(5,5,-2),new n(-10,0,0),new n(0,0,-3),d),y.push(p),p=new c(new n(5,5,2),new n(-3,0,0),new n(0,0,-4),d),y.push(p),p=new c(new n(-2,5,2),new n(-3,0,0),new n(0,0,-4),d),y.push(p),d=new o({numberOfRay:null},{baseColor:new n(8,8,8)}),p=new c(new n(2,5,2),new n(-4,0,0),new n(0,0,-4),d),y.push(p),w.setView(new n(0,0,-10),new n(0,0,0),new n(0,1,0)),w.focus=5,onmessage=(e=>{let t=e.data.type;const i=Math.pow(2,3);if("initial"===t)console.log(`Render with ${i} samples per pixel`),w.size=new s(e.data.cameraSize.x,e.data.cameraSize.y),w.canvasSize=new s(e.data.canvasSize.x,e.data.canvasSize.y);else if("renderRange"===t){let t=e.data.rangeStart,s=new Float32Array(1*1*3),o=w.size.divide(2),l=w.size.divideByVec2(w.canvasSize),a=w.position.plus(w.position.minus(w.lookAt).scaleToLength(w.focus)),h=w.position.plus(w.leftVector.multiply(o.x)).plus(w.topVector.multiply(o.y)).minus(a),u=t.x,c=t.y,d=new n(0,0,0);for(let e=0;e<i;e++){let e=w.leftVector.multiply(l.x*(u+Math.random())).plus(w.topVector.multiply(l.y*(c+Math.random()))),t=[new r(a,h.minus(e).normalize(),0,1)];d=d.plus(f(t,y))}d=d.divide(i),s[0]=d.x,s[1]=d.y,s[2]=d.z,postMessage({type:"doneRender",x:t.x,y:t.y,data:s})}})}]);
//# sourceMappingURL=worker.js.map