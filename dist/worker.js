!function(t){var e={};function i(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)i.d(n,r,function(e){return t[e]}.bind(null,r));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){"use strict";i.r(e);class n{constructor(){1===arguments.length&&arguments[0]instanceof n?(this.x=arguments[0].x,this.y=arguments[0].y,this.z=arguments[0].z):3===arguments.length?(this.x=arguments[0],this.y=arguments[1],this.z=arguments[2]):(this.x=0,this.y=0,this.z=0)}plus(t){return new n(this.x+t.x,this.y+t.y,this.z+t.z)}minus(t){return new n(this.x-t.x,this.y-t.y,this.z-t.z)}multiply(t){return new n(this.x*t,this.y*t,this.z*t)}scaleToLength(t){let e=t/this.length();return new n(this.x*e,this.y*e,this.z*e)}normalize(){return this.scaleToLength(1)}cross(t){return new n(this.y*t.z-this.z*t.y,this.z*t.x-this.x*t.z,this.x*t.y-this.y*t.x)}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}negative(){return new n(-this.x,-this.y,-this.z)}multiplyByVec3(t){return new n(this.x*t.x,this.y*t.y,this.z*t.z)}divide(t){return new n(this.x/t,this.y/t,this.z/t)}projectOnto(t){return t.multiply(this.dot(t.normalize()))}projectLength(t){return this.dot(t.normalize())}}class r{constructor(){1===arguments.length&&arguments[0]instanceof r?(this.x=arguments[0].x,this.y=arguments[0].y):2===arguments.length?(this.x=arguments[0],this.y=arguments[1]):(this.x=0,this.y=0)}divide(t){return new r(this.x/t,this.y/t)}divideByVec2(t){return new r(this.x/t.x,this.y/t.y)}multiplyByVec2(t){return new r(this.x*t.x,this.y*t.y)}floor(){return new r(Math.floor(this.x),Math.floor(this.y))}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}}class s{constructor(t,e,i,r,s){this.startPosition=t,this.direction=null===e?null:e.normalize(),this.iterationCounter=i,this.weight=r,this.absort=s?new n(s):new n(1,1,1),this.ior=1.000277}}class o{constructor(t,e){this.BRDF=t,this.baseColor=e.baseColor||new n(1,1,1),this.materialParam=e}}function l(t,e,i,n,r){let o=n.BRDF,l=t.absort.multiplyByVec3(n.baseColor);if(null===o.numberOfRay)return null;o.numberOfRay&&r>o.numberOfRay&&(r=o.numberOfRay);let a=new Array(r),h=o.totalEnergy(r);for(let u=0;u<r;u++){let r=o.generateDirection(i,t,n),c=o.BRDF(i,r),y=new s(e,r,t.iterationCounter+1,c/h,l);void 0!==n.materialParam.ior&&(y.ior=n.materialParam.ior),a[u]=y}return a}const a={generateDirection(t,e){t.dot(e.direction)>0&&(t=t.negative());let i=new n(2*Math.random()-1,2*Math.random()-1,2*Math.random()-1).normalize();for(;i.dot(t)<.1&&(i=i.negative()).dot(t)<.1;)i=new n(2*Math.random()-1,2*Math.random()-1,2*Math.random()-1).normalize();return i},totalEnergy:t=>t,BRDF:()=>1};class h{constructor(){if(arguments.length>=2){if(!(arguments[0]instanceof n))throw"The first argument of constructor of Sphere must be type of Vec3";if(this.position=new n(arguments[0]),!("number"==typeof arguments[1]&&arguments[1]>=0))throw"The second argument of constructor of Sphere must be a nonnegative number";if(this.radius=arguments[1],arguments.length>2){if(!(arguments[2]instanceof o))throw"The third argument of constructor of Sphere must be type of Material";this.material=arguments[2]}else this.material=new o(a)}else this.position=new n,this.radius=1,this.material=new o(a)}*getCollision(t){let e=t.startPosition.minus(this.position),i=t.direction.dot(t.direction),n=2*t.direction.dot(e);let r,s=n*n-4*i*(e.dot(e)-this.radius*this.radius);if(s<0)yield Number.POSITIVE_INFINITY;else if(0===s){let t=-n/(2*i);t>0?(r=t)<1e-5?yield Number.POSITIVE_INFINITY:yield r:yield Number.POSITIVE_INFINITY}else{let t=Math.sqrt(s),e=-n-t;e>0?(r=e/(2*i))<1e-5?yield Number.POSITIVE_INFINITY:yield r:(e=-n+t)>0?(r=e/(2*i))<1e-5?yield Number.POSITIVE_INFINITY:yield r:yield Number.POSITIVE_INFINITY}let o=t.startPosition.plus(t.direction.multiply(r)),a=l(t,o,o.minus(this.position).normalize(),this.material,1);yield a,null===a&&(yield this.material.baseColor)}}let u=new class{constructor(){this.position=new n,this.lookAt=new n,this.top=new n(0,0,1),this.focus=0,this.size=new r,this.canvasSize=new r}setView(t,e,i){this.position=new n(t),this.lookAt=new n(e),this.top=new n(i);let r=this.lookAt.minus(this.position);this.leftVector=this.top.cross(r).normalize(),this.topVector=r.cross(this.leftVector).normalize()}},c=[],y=new o(a,{baseColor:new n(1,1,1)}),d=new h(new n(-3,0,0),3,y);c.push(d),y=new o(a,{baseColor:new n(1,0,0)}),d=new h(new n(3,0,0),3,y),c.push(d);let m=new class{constructor(t,e){this.direction=t.normalize(),this.color=new n(e)}*getCollision(t){t.iterationCounter>0&&this.direction.negative().dot(t.direction)>0?(yield 1e9,yield null,yield this.color):yield Number.POSITIVE_INFINITY}}(new n(1,-1,-1),new n(1,1,1));function f(t,e){let i=new n(0,0,0);for(let n of t){if(n.iterationCounter>8)continue;let t=Number.POSITIVE_INFINITY,r=null;for(let i of e){let e=i.getCollision(n),s=e.next().value;s<t&&(t=s,r=e)}if(t===Number.POSITIVE_INFINITY)continue;let s=r.next().value;i=null===s?i.plus(r.next().value.multiply(n.weight).multiplyByVec3(n.absort)):i.plus(f(s,e).multiply(n.weight).multiplyByVec3(n.absort))}return i}c.push(m),u.setView(new n(0,0,-10),new n(0,0,0),new n(0,1,0)),u.focus=5,onmessage=(t=>{let e=t.data.type;const i=Math.pow(2,15);if("initial"===e)console.log(`Render with ${i} samples per pixel`),u.size=new r(t.data.cameraSize.x,t.data.cameraSize.y),u.canvasSize=new r(t.data.canvasSize.x,t.data.canvasSize.y);else if("renderRange"===e){let e=t.data.rangeStart,r=t.data.rangeEnd,o=r.x-e.x,l=r.y-e.y,a=new Uint8ClampedArray(o*l*4),h=u.size.divide(2),y=u.size.divideByVec2(u.canvasSize),d=u.position.plus(u.position.minus(u.lookAt).scaleToLength(u.focus)),m=u.position.plus(u.leftVector.multiply(h.x)).plus(u.topVector.multiply(h.y)).minus(d);for(let t=e.x;t<r.x;t++)for(let l=e.y;l<r.y;l++){let r=new n(0,0,0);for(let e=0;e<i;e++){let e=u.leftVector.multiply(y.x*(t+Math.random())).plus(u.topVector.multiply(y.y*(l+Math.random()))),i=[new s(d,m.minus(e).normalize(),0,1)];r=r.plus(f(i,c))}r=r.divide(i);let h=4*((l-e.y)*o+(t-e.x));a[h++]=255*r.x,a[h++]=255*r.y,a[h++]=255*r.z,a[h++]=255}postMessage({type:"doneRender",x:e.x,y:e.y,width:o,height:l,data:a})}})}]);
//# sourceMappingURL=worker.js.map